package tdh.platform.export.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ExportTaskExample {
    /**
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public ExportTaskExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("exportTask.ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("exportTask.ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("exportTask.ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("exportTask.ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("exportTask.ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("exportTask.ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("exportTask.ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("exportTask.ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("exportTask.ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("exportTask.ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("exportTask.ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("exportTask.ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andTaskNameIsNull() {
			addCriterion("exportTask.TASK_NAME is null");
			return (Criteria) this;
		}

		public Criteria andTaskNameIsNotNull() {
			addCriterion("exportTask.TASK_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andTaskNameEqualTo(String value) {
			addCriterion("exportTask.TASK_NAME =", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameNotEqualTo(String value) {
			addCriterion("exportTask.TASK_NAME <>", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameGreaterThan(String value) {
			addCriterion("exportTask.TASK_NAME >", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameGreaterThanOrEqualTo(String value) {
			addCriterion("exportTask.TASK_NAME >=", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameLessThan(String value) {
			addCriterion("exportTask.TASK_NAME <", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameLessThanOrEqualTo(String value) {
			addCriterion("exportTask.TASK_NAME <=", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameLike(String value) {
			addCriterion("exportTask.TASK_NAME like", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameNotLike(String value) {
			addCriterion("exportTask.TASK_NAME not like", value, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameIn(List<String> values) {
			addCriterion("exportTask.TASK_NAME in", values, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameNotIn(List<String> values) {
			addCriterion("exportTask.TASK_NAME not in", values, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameBetween(String value1, String value2) {
			addCriterion("exportTask.TASK_NAME between", value1, value2, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskNameNotBetween(String value1, String value2) {
			addCriterion("exportTask.TASK_NAME not between", value1, value2, "taskName");
			return (Criteria) this;
		}

		public Criteria andTaskTypeIsNull() {
			addCriterion("exportTask.TASK_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andTaskTypeIsNotNull() {
			addCriterion("exportTask.TASK_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andTaskTypeEqualTo(String value) {
			addCriterion("exportTask.TASK_TYPE =", value, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeNotEqualTo(String value) {
			addCriterion("exportTask.TASK_TYPE <>", value, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeGreaterThan(String value) {
			addCriterion("exportTask.TASK_TYPE >", value, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeGreaterThanOrEqualTo(String value) {
			addCriterion("exportTask.TASK_TYPE >=", value, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeLessThan(String value) {
			addCriterion("exportTask.TASK_TYPE <", value, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeLessThanOrEqualTo(String value) {
			addCriterion("exportTask.TASK_TYPE <=", value, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeLike(String value) {
			addCriterion("exportTask.TASK_TYPE like", value, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeNotLike(String value) {
			addCriterion("exportTask.TASK_TYPE not like", value, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeIn(List<String> values) {
			addCriterion("exportTask.TASK_TYPE in", values, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeNotIn(List<String> values) {
			addCriterion("exportTask.TASK_TYPE not in", values, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeBetween(String value1, String value2) {
			addCriterion("exportTask.TASK_TYPE between", value1, value2, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskTypeNotBetween(String value1, String value2) {
			addCriterion("exportTask.TASK_TYPE not between", value1, value2, "taskType");
			return (Criteria) this;
		}

		public Criteria andTaskStatusIsNull() {
			addCriterion("exportTask.TASK_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andTaskStatusIsNotNull() {
			addCriterion("exportTask.TASK_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andTaskStatusEqualTo(Byte value) {
			addCriterion("exportTask.TASK_STATUS =", value, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusNotEqualTo(Byte value) {
			addCriterion("exportTask.TASK_STATUS <>", value, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusGreaterThan(Byte value) {
			addCriterion("exportTask.TASK_STATUS >", value, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("exportTask.TASK_STATUS >=", value, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusLessThan(Byte value) {
			addCriterion("exportTask.TASK_STATUS <", value, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusLessThanOrEqualTo(Byte value) {
			addCriterion("exportTask.TASK_STATUS <=", value, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusIn(List<Byte> values) {
			addCriterion("exportTask.TASK_STATUS in", values, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusNotIn(List<Byte> values) {
			addCriterion("exportTask.TASK_STATUS not in", values, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusBetween(Byte value1, Byte value2) {
			addCriterion("exportTask.TASK_STATUS between", value1, value2, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andTaskStatusNotBetween(Byte value1, Byte value2) {
			addCriterion("exportTask.TASK_STATUS not between", value1, value2, "taskStatus");
			return (Criteria) this;
		}

		public Criteria andAttachmentIsNull() {
			addCriterion("exportTask.ATTACHMENT is null");
			return (Criteria) this;
		}

		public Criteria andAttachmentIsNotNull() {
			addCriterion("exportTask.ATTACHMENT is not null");
			return (Criteria) this;
		}

		public Criteria andAttachmentEqualTo(String value) {
			addCriterion("exportTask.ATTACHMENT =", value, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentNotEqualTo(String value) {
			addCriterion("exportTask.ATTACHMENT <>", value, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentGreaterThan(String value) {
			addCriterion("exportTask.ATTACHMENT >", value, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentGreaterThanOrEqualTo(String value) {
			addCriterion("exportTask.ATTACHMENT >=", value, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentLessThan(String value) {
			addCriterion("exportTask.ATTACHMENT <", value, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentLessThanOrEqualTo(String value) {
			addCriterion("exportTask.ATTACHMENT <=", value, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentLike(String value) {
			addCriterion("exportTask.ATTACHMENT like", value, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentNotLike(String value) {
			addCriterion("exportTask.ATTACHMENT not like", value, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentIn(List<String> values) {
			addCriterion("exportTask.ATTACHMENT in", values, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentNotIn(List<String> values) {
			addCriterion("exportTask.ATTACHMENT not in", values, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentBetween(String value1, String value2) {
			addCriterion("exportTask.ATTACHMENT between", value1, value2, "attachment");
			return (Criteria) this;
		}

		public Criteria andAttachmentNotBetween(String value1, String value2) {
			addCriterion("exportTask.ATTACHMENT not between", value1, value2, "attachment");
			return (Criteria) this;
		}

		public Criteria andCreatedByIsNull() {
			addCriterion("exportTask.CREATED_BY is null");
			return (Criteria) this;
		}

		public Criteria andCreatedByIsNotNull() {
			addCriterion("exportTask.CREATED_BY is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedByEqualTo(Integer value) {
			addCriterion("exportTask.CREATED_BY =", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByNotEqualTo(Integer value) {
			addCriterion("exportTask.CREATED_BY <>", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByGreaterThan(Integer value) {
			addCriterion("exportTask.CREATED_BY >", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByGreaterThanOrEqualTo(Integer value) {
			addCriterion("exportTask.CREATED_BY >=", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByLessThan(Integer value) {
			addCriterion("exportTask.CREATED_BY <", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByLessThanOrEqualTo(Integer value) {
			addCriterion("exportTask.CREATED_BY <=", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByIn(List<Integer> values) {
			addCriterion("exportTask.CREATED_BY in", values, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByNotIn(List<Integer> values) {
			addCriterion("exportTask.CREATED_BY not in", values, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByBetween(Integer value1, Integer value2) {
			addCriterion("exportTask.CREATED_BY between", value1, value2, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByNotBetween(Integer value1, Integer value2) {
			addCriterion("exportTask.CREATED_BY not between", value1, value2, "createdBy");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("exportTask.DELETED is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("exportTask.DELETED is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Byte value) {
			addCriterion("exportTask.DELETED =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Byte value) {
			addCriterion("exportTask.DELETED <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Byte value) {
			addCriterion("exportTask.DELETED >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Byte value) {
			addCriterion("exportTask.DELETED >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Byte value) {
			addCriterion("exportTask.DELETED <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Byte value) {
			addCriterion("exportTask.DELETED <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Byte> values) {
			addCriterion("exportTask.DELETED in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Byte> values) {
			addCriterion("exportTask.DELETED not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Byte value1, Byte value2) {
			addCriterion("exportTask.DELETED between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Byte value1, Byte value2) {
			addCriterion("exportTask.DELETED not between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeIsNull() {
			addCriterion("exportTask.CREATED_TIME is null");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeIsNotNull() {
			addCriterion("exportTask.CREATED_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeEqualTo(Date value) {
			addCriterion("exportTask.CREATED_TIME =", value, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeNotEqualTo(Date value) {
			addCriterion("exportTask.CREATED_TIME <>", value, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeGreaterThan(Date value) {
			addCriterion("exportTask.CREATED_TIME >", value, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("exportTask.CREATED_TIME >=", value, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeLessThan(Date value) {
			addCriterion("exportTask.CREATED_TIME <", value, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeLessThanOrEqualTo(Date value) {
			addCriterion("exportTask.CREATED_TIME <=", value, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeIn(List<Date> values) {
			addCriterion("exportTask.CREATED_TIME in", values, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeNotIn(List<Date> values) {
			addCriterion("exportTask.CREATED_TIME not in", values, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeBetween(Date value1, Date value2) {
			addCriterion("exportTask.CREATED_TIME between", value1, value2, "createdTime");
			return (Criteria) this;
		}

		public Criteria andCreatedTimeNotBetween(Date value1, Date value2) {
			addCriterion("exportTask.CREATED_TIME not between", value1, value2, "createdTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedByIsNull() {
			addCriterion("exportTask.UPDATED_BY is null");
			return (Criteria) this;
		}

		public Criteria andUpdatedByIsNotNull() {
			addCriterion("exportTask.UPDATED_BY is not null");
			return (Criteria) this;
		}

		public Criteria andUpdatedByEqualTo(Integer value) {
			addCriterion("exportTask.UPDATED_BY =", value, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByNotEqualTo(Integer value) {
			addCriterion("exportTask.UPDATED_BY <>", value, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByGreaterThan(Integer value) {
			addCriterion("exportTask.UPDATED_BY >", value, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByGreaterThanOrEqualTo(Integer value) {
			addCriterion("exportTask.UPDATED_BY >=", value, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByLessThan(Integer value) {
			addCriterion("exportTask.UPDATED_BY <", value, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByLessThanOrEqualTo(Integer value) {
			addCriterion("exportTask.UPDATED_BY <=", value, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByIn(List<Integer> values) {
			addCriterion("exportTask.UPDATED_BY in", values, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByNotIn(List<Integer> values) {
			addCriterion("exportTask.UPDATED_BY not in", values, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByBetween(Integer value1, Integer value2) {
			addCriterion("exportTask.UPDATED_BY between", value1, value2, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedByNotBetween(Integer value1, Integer value2) {
			addCriterion("exportTask.UPDATED_BY not between", value1, value2, "updatedBy");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeIsNull() {
			addCriterion("exportTask.UPDATED_TIME is null");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeIsNotNull() {
			addCriterion("exportTask.UPDATED_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeEqualTo(Date value) {
			addCriterion("exportTask.UPDATED_TIME =", value, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeNotEqualTo(Date value) {
			addCriterion("exportTask.UPDATED_TIME <>", value, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeGreaterThan(Date value) {
			addCriterion("exportTask.UPDATED_TIME >", value, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("exportTask.UPDATED_TIME >=", value, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeLessThan(Date value) {
			addCriterion("exportTask.UPDATED_TIME <", value, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeLessThanOrEqualTo(Date value) {
			addCriterion("exportTask.UPDATED_TIME <=", value, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeIn(List<Date> values) {
			addCriterion("exportTask.UPDATED_TIME in", values, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeNotIn(List<Date> values) {
			addCriterion("exportTask.UPDATED_TIME not in", values, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeBetween(Date value1, Date value2) {
			addCriterion("exportTask.UPDATED_TIME between", value1, value2, "updatedTime");
			return (Criteria) this;
		}

		public Criteria andUpdatedTimeNotBetween(Date value1, Date value2) {
			addCriterion("exportTask.UPDATED_TIME not between", value1, value2, "updatedTime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ofc_task
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class corresponds to the database table ofc_task
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}